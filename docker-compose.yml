version: '3.7'

services:
  ## database
  # mysql
  mysql_source:
    container_name: "mysql_source"
    image: mysql:8.0.35
    ports:
      - "3300:3306"
    volumes:
      - ./docker/docker_data/mysql_source:/var/lib/mysql
      - ./docker/docker_init/mysql_source:/docker-entrypoint-initdb.d
      - ./docker/docker_conf/mysql_source:/etc/mysql/conf.d
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_SOURCE_ROOT_PASSWORD}
      - TZ=Asia/Seoul
    restart: always

  mysql_replica:
    container_name: "mysql_replica"
    image: mysql:8.0.35
    ports:
      - "3301:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_REPLICA_ROOT_PASSWORD}
      - TZ=Asia/Seoul
      - SOURCE_ROOT_PASSWORD=${MYSQL_SOURCE_ROOT_PASSWORD}
    volumes:
      - ./docker/docker_data/mysql_replica:/var/lib/mysql
      - ./docker/docker_init/mysql_replica:/docker-entrypoint-initdb.d
      - ./docker/docker_conf/mysql_replica:/etc/mysql/conf.d
    restart: always
    depends_on:
      - mysql_source

  # redis
  redis_source:
    container_name: redis_source
    image: redis:6.2.5
    ports:
      - "6300:6379"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./docker/docker_data/redis_source:/data
      - ./docker/docker_conf/redis_source:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_SOURCE_PASSWORD}
    restart: always

  ## server
  # nginx
  nginx:
    container_name: nginx
    image: nginx:1.25.3
    ports:
      - "81:80"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./docker/docker_conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/docker_conf/nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    depends_on:
      - api1
      - api2

  # api
  api1:
    image: diydriller/dungi-api-server:latest
    ports:
      - "9002:9002"
    environment:
      - jasypt.encryptor.password=${PASSWORD}
      - TZ=Asia/Seoul
    restart: always
    depends_on:
      - redis_source
      - mysql_replica
      - mysql_source

  api2:
    image: diydriller/dungi-api-server:latest
    ports:
      - "9003:9002"
    environment:
      - jasypt.encryptor.password=${PASSWORD}
      - TZ=Asia/Seoul
    restart: always
    depends_on:
      - redis_source
      - mysql_replica
      - mysql_source

  # batch
  batch:
    image: diydriller/dungi-batch-server:latest
    ports:
      - "10000:10000"
    environment:
      - jasypt.encryptor.password=${PASSWORD}
      - TZ=Asia/Seoul
    restart: always
    depends_on:
      - mysql_replica
      - mysql_source

  ## monitoring
  # prometheus
  prometheus:
      image: prom/prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./docker/docker_conf/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        - ./docker/docker_data/prometheus:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
      restart: always

  # grafana
  grafana:
    image: "grafana/grafana"
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - ./docker/docker_conf/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./docker/docker_data/grafana:/var/lib/grafana
    restart: always
    depends_on:
      - prometheus