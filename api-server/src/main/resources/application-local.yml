spring:
  # 데이터베이스 연결 설정
  datasource:
    source:
      url: jdbc:mysql://host.docker.internal:3300/spring_dungi?rewriteBatchedStatements=true
      username: ENC(H02XFv8kQYcw+JabYK2PWA==)
      password: ENC(MKcemwLpfYeOL+VwyFG48HMhSOUdhSn9)
      driver-class-name: com.mysql.cj.jdbc.Driver
      hikari:
        maximum-pool-size: 10
    replica:
      url: jdbc:mysql://host.docker.internal:3301/spring_dungi?rewriteBatchedStatements=true
      username: ENC(H02XFv8kQYcw+JabYK2PWA==)
      password: ENC(uYPzCJbPjhvNmUQE5WODAm9YULJkkKPs)
      driver-class-name: com.mysql.cj.jdbc.Driver
      hikari:
        maximum-pool-size: 10

  # jpa 설정
  jpa:
    database: mysql
    hibernate:
      ddl-auto: validate
    generate-ddl: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
        dialect: org.hibernate.dialect.MySQLDialect

# redis 연결 설정
redis:
  port: 6300
  host: host.docker.internal
  password: ENC(vtjQc5k6ostA1TjT2QzQBE4yHnwl6EsI)
  lettuce:
    pool:
      max-idle: 8
      min-idle: 2
      max-active: 8

# kafka 연결 설정
kafka:
  broker: host.docker.internal:29092

# local file 설정
file:
  upload:
    path: images/
  down:
    path: http://localhost:9002/static/

# cloud 비활성 설정
cloud:
  aws:
    region:
      static: ap-northeast-2
    stack:
      auto: false

# tomcat 설정
server:
  tomcat:
    threads:
      max: 200

# prometheus 연결 설정
management:
  endpoints:
    web:
      exposure:
        include: prometheus