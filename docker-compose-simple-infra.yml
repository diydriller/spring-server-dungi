version: '3.7'

services:
  # mysql
  mysql:
    container_name: mysql
    image: mysql:8.0.35
    ports:
      - "3300:3306"
    volumes:
      - ./docker/docker_data/mysql_source:/var/lib/mysql
      - ./docker/docker_init/mysql_source:/docker-entrypoint-initdb.d
      - ./docker/docker_conf/mysql_source:/etc/mysql/conf.d
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_SOURCE_ROOT_PASSWORD}
      - TZ=Asia/Seoul
    restart: always

  # redis
  redis:
    container_name: redis
    image: redis:6.2.5
    ports:
      - "6300:6379"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./docker/docker_data/redis_source:/data
      - ./docker/docker_conf/redis_source:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_SOURCE_PASSWORD}
    restart: always

  # kafka
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.7.1
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - zookeeper

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.7.1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "22181:2181"